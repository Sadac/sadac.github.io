---
import { z } from 'astro:content'
import PageLayout from '@/layouts/BaseLayout.astro'
import Button from '@/components/Button.astro'
import { sendContactEmail } from '@/utils'

const meta = {
	title: 'Contact Me',
	description: 'Get in touch with me for collaborations, questions, or just to say hello!'
}

// Zod validation schema
const contactSchema = z.object({
	name: z.string().min(2, 'Name must be at least 2 characters').max(50, 'Name must be less than 50 characters'),
	email: z.string().email('Please enter a valid email address'),
	message: z.string().min(10, 'Message must be at least 10 characters').max(1000, 'Message must be less than 1000 characters')
})

let errors: Record<string, string> = {}
let formData = { name: '', email: '', message: '' }
let successMessage = ''

if (Astro.request.method === 'POST') {
	try {
		const data = await Astro.request.formData()
		formData = {
			name: data.get('name')?.toString() || '',
			email: data.get('email')?.toString() || '',
			message: data.get('message')?.toString() || ''
		}

		// Validate with Zod
		const result = contactSchema.safeParse(formData)
		
		if (!result.success) {
			// Extract validation errors
			errors = result.error.errors.reduce((acc, error) => {
				acc[error.path[0] as string] = error.message
				return acc
			}, {} as Record<string, string>)
		} else {
			// Form is valid - send email via AWS SES
			console.log('Valid form submission:', result.data)
			
			const emailSent = await sendContactEmail(result.data)
			
			if (emailSent) {
				successMessage = 'Thank you for your message! I\'ll get back to you soon.'
				formData = { name: '', email: '', message: '' } // Reset form
			} else {
				errors.general = 'There was an error sending your message. Please try again or contact me directly.'
			}
		}
	} catch (error) {
		console.error('Form processing error:', error)
		errors.general = 'An error occurred while processing your message. Please try again.'
	}
}
---

<PageLayout meta={meta}>
	<div class='w-full max-w-2xl'>
		<Button title='Back' href='/' style='button'>
			<svg
				xmlns='http://www.w3.org/2000/svg'
				width='14'
				height='14'
				viewBox='0 0 24 24'
				slot='icon-before'
			>
				<path
					fill='currentColor'
					d='m6.921 12.5l5.792 5.792L12 19l-7-7l7-7l.713.708L6.921 11.5H19v1z'
				>
				</path>
			</svg>
		</Button>

		<h1 class='mb-6 mt-5 text-3xl font-bold'>Contact Me</h1>
		
		<div class='mb-8'>
			<p class='text-muted-foreground mb-4'>
				I'd love to hear from you! Whether you have a question about my work, want to collaborate on a project, 
				or just want to say hello, feel free to reach out.
			</p>
			<p class='text-muted-foreground'>
				I'll do my best to respond within 24-48 hours.
			</p>
		</div>

		{/* Success Message */}
		{successMessage && (
			<div class='mb-6 p-4 bg-green-100 dark:bg-green-900/20 border border-green-300 dark:border-green-700 rounded-md'>
				<p class='text-green-800 dark:text-green-200'>{successMessage}</p>
			</div>
		)}

		{/* General Error */}
		{errors.general && (
			<div class='mb-6 p-4 bg-red-100 dark:bg-red-900/20 border border-red-300 dark:border-red-700 rounded-md'>
				<p class='text-red-800 dark:text-red-200'>{errors.general}</p>
			</div>
		)}

		{/* Contact Form */}
		<form method='POST' class='space-y-6'>
			{/* Name Field */}
			<div>
				<label for='name' class='block text-sm font-medium mb-2'>
					Name <span class='text-red-500'>*</span>
				</label>
				<input
					type='text'
					id='name'
					name='name'
					value={formData.name}
					required
					class={`w-full px-4 py-3 border rounded-md bg-background text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent transition-colors ${
						errors.name ? 'border-red-500 dark:border-red-400' : 'border-input'
					}`}
					placeholder='Your full name'
				/>
				{errors.name && (
					<p class='mt-1 text-sm text-red-600 dark:text-red-400'>{errors.name}</p>
				)}
			</div>

			{/* Email Field */}
			<div>
				<label for='email' class='block text-sm font-medium mb-2'>
					Email <span class='text-red-500'>*</span>
				</label>
				<input
					type='email'
					id='email'
					name='email'
					value={formData.email}
					required
					class={`w-full px-4 py-3 border rounded-md bg-background text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent transition-colors ${
						errors.email ? 'border-red-500 dark:border-red-400' : 'border-input'
					}`}
					placeholder='your.email@example.com'
				/>
				{errors.email && (
					<p class='mt-1 text-sm text-red-600 dark:text-red-400'>{errors.email}</p>
				)}
			</div>

			{/* Message Field */}
			<div>
				<label for='message' class='block text-sm font-medium mb-2'>
					Message <span class='text-red-500'>*</span>
				</label>
				<textarea
					id='message'
					name='message'
					rows='6'
					required
					class={`w-full px-4 py-3 border rounded-md bg-background text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent transition-colors resize-vertical ${
						errors.message ? 'border-red-500 dark:border-red-400' : 'border-input'
					}`}
					placeholder='Tell me about your project, question, or just say hello...'
				>{formData.message}</textarea>
				{errors.message && (
					<p class='mt-1 text-sm text-red-600 dark:text-red-400'>{errors.message}</p>
				)}
			</div>

			{/* Submit Button */}
			<div class='flex justify-end'>
				<button
					type='submit'
					class='px-6 py-3 bg-primary text-primary-foreground rounded-md font-medium hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 transition-colors'
				>
					Send Message
				</button>
			</div>
		</form>

		{/* Alternative Contact Methods */}
		<div class='mt-12 pt-8 border-t border-border'>
			<h2 class='text-xl font-semibold mb-4'>Other Ways to Connect</h2>
			<div class='space-y-3'>
				<div class='flex items-center gap-3'>
					<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' class='h-5 w-5 text-muted-foreground'>
						<path fill='currentColor' d='M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248c-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586c.173-.431.568-.878 1.232-.878c.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252c-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z'/>
					</svg>
					<a 
						href='https://www.linkedin.com/in/rocco-sada/' 
						target='_blank'
						class='text-foreground hover:text-foreground/75 transition-colors'
					>
						Connect on LinkedIn
					</a>
				</div>
			</div>
		</div>
	</div>
</PageLayout>
